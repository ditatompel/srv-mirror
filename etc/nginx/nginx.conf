user  nginx;
worker_processes auto;
worker_rlimit_nofile 65535;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

# load modules
##############
# GeoIP module
load_module modules/ngx_http_geoip_module.so;
load_module modules/ngx_stream_geoip_module.so;

# VTS module
# If you compile Nginx VTS module, you can uncomment this.
load_module modules/ngx_http_vhost_traffic_status_module.so;

events {
    use epoll;
    multi_accept       on;
    worker_connections 65535; # Nginx default: 1024
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # http GeoIP module
    ###################
    # http://nginx.org/en/docs/http/ngx_http_geoip_module.html
    geoip_country /usr/share/GeoIP/GeoIP.dat;
    # defines Cloudflare trusted addresses.
    include /etc/nginx/snippets/cloudflare_geoip_proxy.conf;
    geoip_proxy_recursive on;

    # Cloudflare IPs
    ################
    include /etc/nginx/snippets/cloudflare_real_ips.conf;
    real_ip_header X-Forwarded-For; # or CF-Connecting-IP if you use CloudFlare
    # cloudflare map
    include /etc/nginx/snippets/cloudflare_whitelist.conf;

    # extended Nginx VTS status example
    ###################################
    # Do not use if you don't load the ngx_http_vhost_traffic_status_module
    vhost_traffic_status_zone;
    vhost_traffic_status_filter_by_set_key $geoip_country_code country::*;

    # Logging
    #########
    # the default Nginx format
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    log_format vcombined '$host:$server_port '
        '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $body_bytes_sent '
        '"$http_referer" "$http_user_agent"';
    log_format json_analytics escape=json '{'
        '"msec": "$msec", ' # request unixtime in seconds with a milliseconds resolution
        '"connection": "$connection", ' # connection serial number
        '"connection_requests": "$connection_requests", ' # number of requests made in connection
        '"pid": "$pid", ' # process pid
        '"request_id": "$request_id", ' # the unique request id
        '"request_length": "$request_length", ' # request length (including headers and body)
        '"remote_addr": "$remote_addr", ' # client IP
        '"remote_user": "$remote_user", ' # client HTTP username
        '"remote_port": "$remote_port", ' # client port
        '"time_local": "$time_local", '
        '"time_iso8601": "$time_iso8601", ' # local time in the ISO 8601 standard format
        '"request": "$request", ' # full path no arguments if the request
        '"request_uri": "$request_uri", ' # full path and arguments if the request
        '"args": "$args", ' # args
        '"status": "$status", ' # response status code
        '"body_bytes_sent": "$body_bytes_sent", ' # the number of body bytes exclude headers sent to a client
        '"bytes_sent": "$bytes_sent", ' # the number of bytes sent to a client
        '"http_referer": "$http_referer", ' # HTTP referer
        '"http_user_agent": "$http_user_agent", ' # user agent
        '"http_x_forwarded_for": "$http_x_forwarded_for", ' # http_x_forwarded_for
        '"http_host": "$http_host", ' # the request Host: header
        '"server_name": "$server_name", ' # the name of the vhost serving the request
        '"request_time": "$request_time", ' # request processing time in seconds with msec resolution
        '"upstream": "$upstream_addr", ' # upstream backend server for proxied requests
        '"upstream_connect_time": "$upstream_connect_time", ' # upstream handshake time incl. TLS
        '"upstream_header_time": "$upstream_header_time", ' # time spent receiving upstream headers
        '"upstream_response_time": "$upstream_response_time", ' # time spent receiving upstream body
        '"upstream_response_length": "$upstream_response_length", ' # upstream response length
        '"upstream_cache_status": "$upstream_cache_status", ' # cache HIT/MISS where applicable
        '"ssl_protocol": "$ssl_protocol", ' # TLS protocol
        '"ssl_cipher": "$ssl_cipher", ' # TLS cipher
        '"scheme": "$scheme", ' # http or https
        '"request_method": "$request_method", ' # request method
        '"server_protocol": "$server_protocol", ' # request protocol, like HTTP/1.1 or HTTP/2.0
        '"pipe": "$pipe", ' # "p" if request was pipelined, "." otherwise
        '"gzip_ratio": "$gzip_ratio", '
        '"geoip_country_code": "$geoip_country_code"'
        '}';
    
    access_log     syslog:server=xxx.xxx.xxx.xxx:xxx,facility=local7,tag=nginx,severity=info vcombined;
    log_not_found  off;

    # Common nginx http block configuration
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    server_tokens   off;
    types_hash_max_size    2048;
    types_hash_bucket_size 64;
    keepalive_timeout  65;
    # If you reverse-proxying TOR hostname, you may set (or increase) these values:
    server_names_hash_bucket_size  128;

    # GZIP
    ######
    gzip            on;
    gzip_vary       on;
    gzip_proxied    any;
    gzip_comp_level 6; # 1-9
    gzip_types      text/plain text/css text/xml application/json text/javascript application/javascript application/x-javascript application/xml application/xml+rss application/atom+xml image/svg+xml;
    gzip_min_length 20;
    gzip_buffers    16 8k;
    gzip_disable    "MSIE [1-6]\.(?!.*SV1)";

    # error pages
    error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /error.html;

    map $status $status_text {
        400 'Bad Request';
        401 'Unauthorized';
        402 'Payment Required';
        403 'Forbidden';
        404 'Not Found';
        405 'Method Not Allowed';
        406 'Not Acceptable';
        407 'Proxy Authentication Required';
        408 'Request Timeout';
        409 'Conflict';
        410 'Gone';
        411 'Length Required';
        412 'Precondition Failed';
        413 'Payload Too Large';
        414 'URI Too Long';
        415 'Unsupported Media Type';
        416 'Range Not Satisfiable';
        417 'Expectation Failed';
        418 'I\'m a teapot';
        421 'Misdirected Request';
        422 'Unprocessable Entity';
        423 'Locked';
        424 'Failed Dependency';
        425 'Too Early';
        426 'Upgrade Required';
        428 'Precondition Required';
        429 'Too Many Requests';
        431 'Request Header Fields Too Large';
        451 'Unavailable For Legal Reasons';
        500 'Internal Server Error';
        501 'Not Implemented';
        502 'Bad Gateway';
        503 'Service Unavailable';
        504 'Gateway Timeout';
        505 'HTTP Version Not Supported';
        506 'Variant Also Negotiates';
        507 'Insufficient Storage';
        508 'Loop Detected';
        510 'Not Extended';
        511 'Network Authentication Required';
        default 'Something is wrong';
    }

    ##
    # Proxy Cache
    ##
    proxy_cache_path /srv/http/cache/nginx/pcache levels=1:2 keys_zone=pcache:60m max_size=1g inactive=24h;
    proxy_cache_key "$scheme$request_method$host$request_uri";
    proxy_cache_methods GET HEAD;
    proxy_cache_background_update on;

    map $http_upgrade $connection_upgrade {
      default upgrade;
      ''      close;
    }

    include /etc/nginx/conf.d/*.conf;
}

# vim: ft=nginx ts=4 sw=4 et
